{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRIYANSHU SINGH\\\\OneDrive\\\\Desktop\\\\Lab Management System\\\\src\\\\components\\\\ComputerList.js\";\nimport React from 'react';\nimport '../styles/ComputerList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComputerList = ({\n  computers,\n  onStatusChange\n}) => {\n  // Generate mock computer data if not provided\n  const computerList = computers || Array(25).fill(0).map((_, index) => ({\n    id: `PC-${index + 1}`,\n    status: index < 22 ? 'working' : 'not_working',\n    lastChecked: new Date(Date.now() - Math.floor(Math.random() * 7) * 24 * 60 * 60 * 1000).toISOString(),\n    issues: index >= 22 ? ['Hardware issue', 'Needs maintenance'] : []\n  }));\n  const handleStatusChange = (computerId, newStatus) => {\n    if (onStatusChange) {\n      onStatusChange(computerId, newStatus);\n    }\n  };\n  const getStatusBadge = status => {\n    const statusMap = {\n      working: {\n        label: 'Working',\n        className: 'status-working'\n      },\n      not_working: {\n        label: 'Not Working',\n        className: 'status-not-working'\n      },\n      maintenance: {\n        label: 'Under Maintenance',\n        className: 'status-maintenance'\n      }\n    };\n    const statusInfo = statusMap[status] || {\n      label: 'Unknown',\n      className: 'status-unknown'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `status-badge ${statusInfo.className}`,\n      children: statusInfo.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"computer-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Computer Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn active\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        children: \"Working\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        children: \"Not Working\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-btn\",\n        children: \"Needs Maintenance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"computer-grid\",\n      children: computerList.map(computer => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"computer-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"computer-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: computer.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), getStatusBadge(computer.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"computer-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Last Checked:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 18\n            }, this), \" \", formatDate(computer.lastChecked)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), computer.issues && computer.issues.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"issues-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Issues:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: computer.issues.map((issue, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: issue\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `status-btn ${computer.status === 'working' ? 'active' : ''}`,\n              onClick: () => handleStatusChange(computer.id, 'working'),\n              children: \"Mark Working\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `status-btn ${computer.status === 'not_working' ? 'active' : ''}`,\n              onClick: () => handleStatusChange(computer.id, 'not_working'),\n              children: \"Report Issue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `status-btn ${computer.status === 'maintenance' ? 'active' : ''}`,\n              onClick: () => handleStatusChange(computer.id, 'maintenance'),\n              children: \"Under Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, computer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = ComputerList;\nexport default ComputerList;\nvar _c;\n$RefreshReg$(_c, \"ComputerList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ComputerList","computers","onStatusChange","computerList","Array","fill","map","_","index","id","status","lastChecked","Date","now","Math","floor","random","toISOString","issues","handleStatusChange","computerId","newStatus","getStatusBadge","statusMap","working","label","className","not_working","maintenance","statusInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","toLocaleString","computer","length","issue","i","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PRIYANSHU SINGH/OneDrive/Desktop/Lab Management System/src/components/ComputerList.js"],"sourcesContent":["import React from 'react';\nimport '../styles/ComputerList.css';\n\nconst ComputerList = ({ computers, onStatusChange }) => {\n  // Generate mock computer data if not provided\n  const computerList = computers || Array(25).fill(0).map((_, index) => ({\n    id: `PC-${index + 1}`,\n    status: index < 22 ? 'working' : 'not_working',\n    lastChecked: new Date(Date.now() - Math.floor(Math.random() * 7) * 24 * 60 * 60 * 1000).toISOString(),\n    issues: index >= 22 ? ['Hardware issue', 'Needs maintenance'] : []\n  }));\n\n  const handleStatusChange = (computerId, newStatus) => {\n    if (onStatusChange) {\n      onStatusChange(computerId, newStatus);\n    }\n  };\n\n  const getStatusBadge = (status) => {\n    const statusMap = {\n      working: { label: 'Working', className: 'status-working' },\n      not_working: { label: 'Not Working', className: 'status-not-working' },\n      maintenance: { label: 'Under Maintenance', className: 'status-maintenance' }\n    };\n    \n    const statusInfo = statusMap[status] || { label: 'Unknown', className: 'status-unknown' };\n    return <span className={`status-badge ${statusInfo.className}`}>{statusInfo.label}</span>;\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  return (\n    <div className=\"computer-list\">\n      <h3>Computer Status</h3>\n      <div className=\"filters\">\n        <button className=\"filter-btn active\">All</button>\n        <button className=\"filter-btn\">Working</button>\n        <button className=\"filter-btn\">Not Working</button>\n        <button className=\"filter-btn\">Needs Maintenance</button>\n      </div>\n      \n      <div className=\"computer-grid\">\n        {computerList.map((computer) => (\n          <div key={computer.id} className=\"computer-card\">\n            <div className=\"computer-header\">\n              <h4>{computer.id}</h4>\n              {getStatusBadge(computer.status)}\n            </div>\n            \n            <div className=\"computer-details\">\n              <p><strong>Last Checked:</strong> {formatDate(computer.lastChecked)}</p>\n              \n              {computer.issues && computer.issues.length > 0 && (\n                <div className=\"issues-section\">\n                  <p><strong>Issues:</strong></p>\n                  <ul>\n                    {computer.issues.map((issue, i) => (\n                      <li key={i}>{issue}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              <div className=\"action-buttons\">\n                <button \n                  className={`status-btn ${computer.status === 'working' ? 'active' : ''}`}\n                  onClick={() => handleStatusChange(computer.id, 'working')}\n                >\n                  Mark Working\n                </button>\n                <button \n                  className={`status-btn ${computer.status === 'not_working' ? 'active' : ''}`}\n                  onClick={() => handleStatusChange(computer.id, 'not_working')}\n                >\n                  Report Issue\n                </button>\n                <button \n                  className={`status-btn ${computer.status === 'maintenance' ? 'active' : ''}`}\n                  onClick={() => handleStatusChange(computer.id, 'maintenance')}\n                >\n                  Under Maintenance\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ComputerList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}